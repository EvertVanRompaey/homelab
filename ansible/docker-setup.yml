- name: Install docker and docker compose
  hosts: all
  become: true

  tasks:
    - name: Update APT cache
      apt:
        update_cache: yes
      become: true

    - name: Install Docker dependencies
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present
      become: true

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg
        state: present
      become: true

    - name: Add Docker APT repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
        state: present
      become: true

    - name: Install Docker
      apt:
        name: docker-ce
        state: present
      become: true

    - name: Ensure current user is in docker group
      user:
        name: ubuntu
        groups: docker
        append: yes
      become: true

    - name: Install Docker Compose
      shell: curl -fsSL https://github.com/docker/compose/releases/latest/download/docker-compose-Linux-x86_64 -o /usr/local/bin/docker-compose && chmod +x /usr/local/bin/docker-compose
      become: true

    - name: Create portainer container
      docker_container:
        name: portainer
        image: portainer/portainer-ce
        state: started
        recreate: yes
        restart_policy: always
        published_ports:
          - "8000:8000"
          - "9000:9000"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - portainer_data:/data

    - name: Wait for Portainer to become available
      uri:
        url: http://localhost:9000/api/status
        status_code: 200
      register: portainer_status
      retries: 10
      delay: 5
      until: portainer_status.status == 200

    - name: Create initial admin user
      uri:
        url: http://localhost:9000/api/users/admin/init
        method: POST
        headers:
          Content-Type: application/json
        body: 
          Username: "admin"
          Password: "Kappa123456789"
        body_format: json
        status_code: 200